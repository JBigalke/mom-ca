<xrx:service xmlns:xrx="http://www.monasterium.net/NS/xrx">
  <xrx:id>tag:www.monasterium.net,2011:/mom/service/geolocations-charters</xrx:id>
  <xrx:title>
    <xrx:i18n>
      <xrx:key></xrx:key>
      <xrx:default></xrx:default>
    </xrx:i18n>
  </xrx:title>
  <xrx:subtitle></xrx:subtitle>
  <xrx:description></xrx:description>
  <xrx:author>JBigalke</xrx:author>
  <xrx:licence>
This is a component file of the VdU Software for a Virtual Research Environment for the handling of Medieval charters.

As the source code is available here, it is somewhere between an alpha- and a beta-release, may be changed without any consideration of backward compatibility of other parts of the system, therefore, without any notice.
b
This file is part of the VdU Virtual Research Environment Toolkit (VdU/VRET).

The VdU/VRET is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

VdU/VRET is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with VdU/VRET.  If not, see http://www.gnu.org/licenses.
  </xrx:licence>
  <xrx:variables>
  <xrx:variable>
  <xrx:name>$feed</xrx:name>
  <xrx:expression>request:get-parameter('feed', '')</xrx:expression>
  </xrx:variable>
  <xrx:variable>
  <xrx:name>$mode</xrx:name>
  <xrx:expression>request:get-parameter('mode','')</xrx:expression>
  </xrx:variable>
   <xrx:variable>
      <xrx:name>$geoxml</xrx:name>  
      <xrx:expression>doc("/db/mom-data/metadata.geo.public/geo.xml")</xrx:expression>
    </xrx:variable>      
  </xrx:variables> 
  <xrx:init>
   <xrx:processor>
     <xrx:translateflag>false</xrx:translateflag>
     <xrx:serializeas>method=text media-type=text/plain</xrx:serializeas>
   </xrx:processor>
  </xrx:init>
  <xrx:body>  
  {
  
  let $charters := collection(concat(metadata:base-collection-path('charter','public'),$feed))/atom:entry[atom:content//cei:issued/cei:placeName/@key]
      
    let $mergedxml := geoservices:merge_locations_charters($geoxml, $charters)
    let $json := geoservices:create_charter_json($mergedxml)


return $json
  }

  </xrx:body> 
</xrx:service>
